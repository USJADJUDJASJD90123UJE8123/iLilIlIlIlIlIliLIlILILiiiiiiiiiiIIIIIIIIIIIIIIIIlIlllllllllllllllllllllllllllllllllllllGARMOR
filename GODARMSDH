-- Function to equip specific tools
local function EquipTacAndDoubleBarrelDH(character)
    -- Get the player's backpack
    local player = game.Players.LocalPlayer
    local backpack = player.Backpack
    
    -- Make sure the character is valid and the backpack exists
    if backpack and character then
        -- Equip only the specified tools or their alternatives
        for _, tool in pairs(backpack:GetChildren()) do
            -- Check if tool is Double-Barrel SG or its alternative names
            if tool.Name == "[Double-Barrel SG]" or tool.Name == "db" then
                -- Equip the Double-Barrel SG tool
                tool.Parent = character
            -- Check if tool is Tactical Shotgun or its alternative names
            elseif tool.Name == "[TacticalShotgun]" or tool.Name == "tac" or tool.Name == "tactical sg" then
                -- Equip the Tactical Shotgun tool
                tool.Parent = character
            end
        end
    end
end

-- Define the positions for the tools
local dbOriginalPosition = CFrame.new(0.133945465, -0.213825256, 0.959548354, 0.892001987, 0.449795008, 0.0449092388, -0.449909091, 0.893037558, -0.00810541213, -0.0437514111, -0.0129750315, 0.99895817)
local tacticalOriginalPosition = CFrame.new(0.0678538233, -0.213825315, 1.24658322, 0.892001987, 0.449795008, 0.0449092388, -0.449909091, 0.893037558, -0.00810541213, -0.0437514111, -0.0129750315, 0.99895817)

local dbPpPosition = CFrame.new(-0.0596132688, 1.43176389, 2.78347898, 0.892001808, 0.449794888, 0.0449092798, -0.449909091, 0.893037558, -0.00810542703, -0.0437513813, -0.0129749989, 0.998957992)
local tacticalPpPosition = CFrame.new(0.029014945, 1.58306754, 0.261866689, 0.892001987, 0.449795008, 0.0449092388, -0.449909091, 0.893037558, -0.00810541213, -0.0437514111, -0.0129750315, 0.99895817)
local hotdognsfwPOS = CFrame.new(-0.859824955, 1.47794378, -0.931441963, 0.0288801752, -0.121209711, 0.992206573, -0.0895527005, 0.988314986, 0.123340875, -0.99556303, -0.0924169645, 0.0176880732)

-- Function to update the tool positions
local function updateToolPositions(command)
    local player = game.Players.LocalPlayer
    local backpack = player.Backpack
    local tacticalShotgun = backpack:FindFirstChild("[TacticalShotgun]")
    local dbShotgun = backpack:FindFirstChild("[Double-Barrel SG]")
    local hotDogTool = backpack:FindFirstChild("[HotDog]")

    if command == ";pp" then
        if tacticalShotgun then
            tacticalShotgun.CFrame = tacticalPpPosition
        end
        if dbShotgun then
            dbShotgun.CFrame = dbPpPosition
            EquipTacAndDoubleBarrelDH(game.Players.LocalPlayer.Character)
        end
    elseif command == ";unpp" then
        if tacticalShotgun then
            tacticalShotgun.CFrame = tacticalOriginalPosition
        end
        if dbShotgun then
            dbShotgun.CFrame = dbOriginalPosition
        end
    elseif command == ";hotcawk" then
        if hotDogTool then
            hotDogTool.CFrame = hotdognsfwPOS
        end
    end
end

-- Listen for chat messages and respond accordingly
local function onChatMessage(message)
    print("Chat Message Received: " .. message)  -- Debug: Check if message is received

    if message == ";pp" or message == ";unpp" or message == ";hotcawk" then
        print("Responding to Command: " .. message)  -- Debug: Check if the command is recognized
        updateToolPositions(message)
    elseif message == ";R6" then
        print("Loading R6 script")  -- Debug: Check if R6 command is received
        loadstring(game:HttpGet("https://pastebin.com/raw/47pfYr3a"))()
    elseif message == ";R15" then
        print("Loading R15 script")  -- Debug: Check if R15 command is received
        loadstring(game:HttpGet("https://pastebin.com/raw/7dSrNgif"))()
    elseif message == ";FilteringEnabled?AnimMADEBYME" then
        print("Loading FE ANIMATION FIGHTER REANINM - script")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/USJADJUDJASJD90123UJE8123/FEANIMRFASDIMASDISAilIlILIliiiiiiiiiiiiiiikLiioiikIIKIOLIKOLDSAIKL99O8IKAI9KDI98KA/refs/heads/main/FERTEANIMSDINADNIANIDPOILISLKADKOIASDIKI21V1.0"))()
    elseif message == ";generate cash" then
        print("Generating cash")  -- Debug: Check if cash generation command is received
        local AM2T = 10000
        game.ReplicatedStorage.MainEvent:FireServer("DropMoney", AM2T)
    end
end

-- Set up the chat listener
game:GetService("Players").LocalPlayer.Chatted:Connect(onChatMessage)

wait(1)
-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game.Workspace
local VirtualUser = game:GetService("VirtualUser")
local Camera = game:GetService("Workspace").CurrentCamera
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Bubble properties
local bubbleRadius = 65.5
local bubbleTransparency = 0.8
local lastTeleportTime = 0
local teleportCooldown = 0.1
local pointedModels = {}
local bubble = Instance.new("Part")

-- Anti-Bullet functionality
local antiBulletEnabled = false -- Track if the script is enabled or disabled

-- Create a blue bubble anchored to the player
bubble.Shape = Enum.PartType.Ball
bubble.Size = Vector3.new(bubbleRadius * 2, bubbleRadius * 2, bubbleRadius * 2)
bubble.Color = Color3.fromRGB(0, 0, 255)
bubble.Transparency = bubbleTransparency
bubble.Anchored = true
bubble.CanCollide = false
bubble.CastShadow = false  -- Disable shadows
bubble.Parent = workspace

-- Update the bubble's position to follow the player
RunService.Heartbeat:Connect(function()
    if character.PrimaryPart then
        bubble.Position = character.PrimaryPart.Position
    end
end)

-- Function to check if the model is rotated towards the player
local function isModelRotatedToPlayer(model, character)
    if model:FindFirstChild("HumanoidRootPart") then
        local modelPosition = model.HumanoidRootPart.Position
        local characterPosition = character.PrimaryPart.Position
        local directionToPlayer = (characterPosition - modelPosition).Unit
        local modelLookVector = model.HumanoidRootPart.CFrame.LookVector
        local dotProduct = modelLookVector:Dot(directionToPlayer)

        return dotProduct > 0.3
    end
    return false
end

-- Function to send notifications to CoreGui
local function sendNotification(message)
    StarterGui:SetCore("SendNotification", {
        Title = "ANTI BULLET DH",
        Text = message
    })
end

-- Function to move all tools to Workspace
local function moveAllToolsToWorkspace()
    for _, tool in ipairs(player.Backpack:GetChildren()) do
        if tool:IsA("Tool") then
            tool.Parent = workspace
        end
    end
end

-- Function to move all tools to Backpack
local function moveAllToolsToBackpack()
    for _, tool in ipairs(workspace:GetChildren()) do
        if tool:IsA("Tool") then
            tool.Parent = player.Backpack
        end
    end
end

-- Teleport function to move the player a specific distance away from the model
local function teleportAwayFromModel(model, distance)
    if model and model:FindFirstChild("HumanoidRootPart") then
        local modelPosition = model.HumanoidRootPart.Position
        local direction = (character.PrimaryPart.Position - modelPosition).Unit
        local newPosition = modelPosition + direction * distance
        local zigzagnewpos = newPosition + Vector3.new(-6, 0, 0) -- 6 meters to the left

        -- Randomly select newPosition or zigzagnewpos
        local finalPosition = math.random(1, 2) == 1 and newPosition or zigzagnewpos

        -- Cast a ray to check if the teleport position is valid (no collision with walls/floors)
        local rayOrigin = finalPosition
        local rayDirection = Vector3.new(0, -50, 0)  -- Ray going downward to check for ground
        local raycastResult = Workspace:Raycast(rayOrigin, rayDirection)

        -- Check if the position is above the ground (not in the void)
        if not raycastResult then
            -- If no hit, it could be in the void, so we adjust the position to a safer height
            local safePosition = finalPosition + Vector3.new(0, 10, 0)  -- Raise 10 studs above the original position
            character:SetPrimaryPartCFrame(CFrame.new(safePosition))
        else
            -- If there's no void, we use the raycast result position to ensure it's valid
            character:SetPrimaryPartCFrame(CFrame.new(finalPosition))
        end
    end
end




-- Function to move to the item and interact (Modified to lock camera during interaction)
local hasInteracted = false -- Flag to ensure the function only runs once

local function interactWithHotDog(itemName)
    -- Save the player's original position and camera position
    local origin = player.Character.HumanoidRootPart.CFrame
    local originalCameraCFrame = Camera.CFrame -- Save the current camera position and orientation

    -- Lock the camera in place by setting its CFrame to the original
    Camera.CFrame = originalCameraCFrame
    Camera.CameraType = Enum.CameraType.Scriptable  -- Lock the camera's movement and rotation

    -- Move the player's character to the item
    local item = game:GetService("Workspace").Ignored.Shop:FindFirstChild(itemName)
    if item then
        player.Character.HumanoidRootPart.CFrame = item.Head.CFrame
        wait()
        moveAllToolsToWorkspace()
        wait(0.06)
        -- Interact with the item's ClickDetector
        local clickDetector = item:FindFirstChildOfClass("ClickDetector")
        if clickDetector then
            fireclickdetector(clickDetector)
            wait()
            fireclickdetector(clickDetector)
            wait()
            fireclickdetector(clickDetector)
            wait()
            fireclickdetector(clickDetector)
            wait()
            fireclickdetector(clickDetector)
            wait()
            fireclickdetector(clickDetector)
            wait()
            fireclickdetector(clickDetector)
            wait()
            fireclickdetector(clickDetector)
        end

        -- Ensure the player returns to the original position after a short delay
        task.wait(0.1) -- Wait for a brief moment to allow the interaction to complete
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = origin
            wait(0.05)
            moveAllToolsToBackpack()
        else
            warn("Failed to return to the original position: HumanoidRootPart not found.")
        end
    else
        warn("Item not found: " .. itemName)
    end

    -- Unlock the camera by restoring its original position and orientation
    Camera.CFrame = originalCameraCFrame
    Camera.CameraType = Enum.CameraType.Custom  -- Restore normal camera behavior

    -- Reset the flag each time the function is run
    hasInteracted = true
end



local function checkArmorAndBuy()
    local saffi = Workspace.Players:FindFirstChild("SaffiTheTaffi")
    local saffilp = game.Players.LocalPlayer
    if not saffi then
        saffi = Workspace.players:FindFirstChild("SaffiTheTaffi")
        return false
    end

    local armor = saffi:FindFirstChild("BodyEffects") and saffi.BodyEffects:FindFirstChild("Armor")

    if not armor then
        armor = saffilp:FindFirstChild("DataFolder") and saffilp.DataFolder:FindFirstChild("Armor")
        
        -- Now check the next condition only if the first one is still nil
        if not armor then
            armor = saffilp:FindFirstChild("DataFolder") and saffilp.DataFolder.Information:FindFirstChild("Armor")
        end
    end
    
    if armor then
        if armor.Value < 90 then
            print("Armor is below 90, performing action.")
            return true
        end
    else
        print("Armor not found in BodyEffects or DataFolder.")
        return false
    end
    return false
end

-- ** NEW ** Variable to manage health drop below 55 and cooldown
local lastHealthCheckTime = 0
local healthCooldown = 2.4  -- 5 second cooldown

local function mainLoop()
    while antiBulletEnabled do
        -- Check if armor is below 90 and trigger the function once
        if checkArmorAndBuy() then
            -- Search for the hotdog item
            local hotDogItem = game:GetService("Workspace").Ignored.Shop:FindFirstChild("[Full Armor]") 
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("[Max Armor]")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("[High-Medium Armor] - $2300")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("[High-Armor]")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("[Medium Armor]")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("[Medium-Armor]")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("[Full Armor] - $3639")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("[Medium Armor] - $1600")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("[Medium Armor] - $1000")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("Full Armor")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("High-Medium Armor")
                               or game:GetService("Workspace").Ignored.Shop:FindFirstChild("Medium Armor")





            -- If the hotdog item is found, interact with it
            if hotDogItem then
                interactWithHotDog(hotDogItem.Name)
                print("Teleported to buy armor: " .. hotDogItem.Name)
            else
                warn("No hotdog item found in the shop.")
            end
        end

        -- Add a short delay between each loop iteration to avoid excessive script usage
        task.wait(0.1)
    end
end

-- Toggle the Anti-Bullet functionality using the "P" key
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end
    if input.KeyCode == Enum.KeyCode.P then
        antiBulletEnabled = not antiBulletEnabled
        if antiBulletEnabled then
            sendNotification("Anti Bullet Enabled")
            spawn(mainLoop)  -- Run the mainLoop when enabled
        else
            sendNotification("Anti Bullet Disabled")
        end
    end
end)

-- Main detection loop for Anti-Bullet DH
RunService.Heartbeat:Connect(function()
    if antiBulletEnabled then
        local modelsToCheck = {}

        -- Check models in Workspace
        for _, model in ipairs(Workspace:GetChildren()) do
            if model:IsA("Model") and model.Name ~= "SaffiTheTaffi" then
                table.insert(modelsToCheck, model)
            end
        end

        -- Check models in the "Players" folder if no models are found
        if #modelsToCheck == 0 then
            local playersFolder = Workspace:FindFirstChild("Players") or Workspace:FindFirstChild("players")
            if playersFolder then
                for _, model in ipairs(playersFolder:GetChildren()) do
                    if model:IsA("Model") then
                        table.insert(modelsToCheck, model)
                    end
                end
            end
        end

        -- Process each model in the list
        for _, model in ipairs(modelsToCheck) do
            local isInBubble = false

            if model:FindFirstChild("HumanoidRootPart") then
                local distance = (character.PrimaryPart.Position - model.HumanoidRootPart.Position).Magnitude
                if distance <= bubbleRadius then
                    isInBubble = true
                end
            end

            if isInBubble then
                for _, child in ipairs(model:GetChildren()) do
                    if child:IsA("Tool") then
                        if child.Name == "[Revolver]" or child.Name == "[Double-Barrel SG]" or child.Name == "rev" then
                            if isModelRotatedToPlayer(model, character) then
                                if not pointedModels[model] then
                                    local currentTime = tick()
                                    if currentTime - lastTeleportTime >= teleportCooldown then
                                        teleportAwayFromModel(model, 15)
                                        lastTeleportTime = currentTime
                                        pointedModels[model] = true
                                    end
                                end
                                break
                            end
                        end
                    end
                end
            end
        end
    end
end)

-- Vehicle Fly Script
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local LocalPlayer = Players.LocalPlayer
local FlyActive = false

-- Fly settings
local flySpeed = 50
local control = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
local bodyGyro, bodyVelocity

-- Utility function to get the root part of a character
local function getRoot(character)
    return character:FindFirstChild("HumanoidRootPart") or character.PrimaryPart
end

-- Activate fly mode
local function startFly()
    if FlyActive then return end
    FlyActive = true

    local character = LocalPlayer.Character
    if not character then return end

    local root = getRoot(character)
    if not root then return end

    -- Create BodyGyro and BodyVelocity
    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(99999999999999999e999, 99999999999999999e999, 99999999999999999e999)
    bodyGyro.P = 11e4
    bodyGyro.CFrame = root.CFrame
    bodyGyro.D = 4000 -- Added damping to reduce oscillations
    bodyGyro.Parent = root

    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(11e9, 11e9, 11e9)
    bodyVelocity.Velocity = Vector3.zero
    bodyVelocity.Parent = root

    -- Update movement
    task.spawn(function()
        while FlyActive do
            task.wait()
            local camera = workspace.CurrentCamera
            local moveDirection = (camera.CFrame.LookVector * (control.F + control.B)) + (camera.CFrame.RightVector * (control.R + control.L)) + Vector3.new(0, control.Q + control.E, 0)

            bodyVelocity.Velocity = moveDirection * flySpeed
            bodyGyro.CFrame = camera.CFrame
        end
    end)
end

-- Deactivate fly mode
local function stopFly()
    if not FlyActive then return end
    FlyActive = false

    if bodyGyro then bodyGyro:Destroy() end
    if bodyVelocity then bodyVelocity:Destroy() end

    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then humanoid.PlatformStand = false end
    end
end

-- Handle key inputs for flight controls
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    local key = input.KeyCode
    if key == Enum.KeyCode.W then
        control.F = 5
    elseif key == Enum.KeyCode.S then
        control.B = -5
    elseif key == Enum.KeyCode.A then
        control.L = -5
    elseif key == Enum.KeyCode.D then
        control.R = 5
    elseif key == Enum.KeyCode.E then
        control.Q = 5
    elseif key == Enum.KeyCode.Q then
        control.E = -5
    elseif key == Enum.KeyCode.L then
        -- Toggle fly mode when "L" key is pressed
        if not FlyActive then
            startFly()
            StarterGui:SetCore("SendNotification", {
                Title = "Animation panel says:",
                Text = "Vehicle fly ANIM ON, MADE BY YOU, ME ;)"
            })
        else
            stopFly()
            StarterGui:SetCore("SendNotification", {
                Title = "Animation panel says:",
                Text = "Vehicle fly ANIM DISABLED"
            })
        end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    local key = input.KeyCode
    if key == Enum.KeyCode.W then
        control.F = 0
    elseif key == Enum.KeyCode.S then
        control.B = 0
    elseif key == Enum.KeyCode.A then
        control.L = 0
    elseif key == Enum.KeyCode.D then
        control.R = 0
    elseif key == Enum.KeyCode.E then
        control.Q = 0
    elseif key == Enum.KeyCode.Q then
        control.E = 0
    end
end)

